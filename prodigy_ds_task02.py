# -*- coding: utf-8 -*-
"""Prodigy_DS_Task02.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cV0uQ_Ty4QyWWG0OkhKmnTRBWQl1NgPX

**Task02-Perform data cleaning and exploratory data analysis (EDA) on a dataset of your choice, such as the Titanic dataset from Kaggle. Explore the relationships between variables and identify patterns and trends in the data.**
"""

# EDA
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import plotly.express as px
import plotly.graph_objects as go
from plotly.subplots import make_subplots

df=pd.read_csv('/content/ds_salaries.csv')
df

"""**DATA CLEANING**"""

# Droping the useless column 'Unnamed: 0'
df=df.drop('Unnamed: 0',axis=1)
df.head()

df.shape

print(df.isnull().sum())
print(df.info())

# Employment Type
employment_type_dict = {'FT':'Full Time',
                        'PT':'Part Time',
                        'CT':'Contract',
                        'FL':'Freelance'}

df['employment_type'] = df['employment_type'].map(employment_type_dict)

df

"""**DESCRIPTIVE STATISTICS**"""

df.describe()

df['work_year'].mean()

df['salary'].std()

df['remote_ratio'].median()

df['company_size'].value_counts()

"""**DATA VISUALIZATION**"""

#HISTOGRAM SHOWING PERCENTAGE OF EMPLOYEE TYPE(UNIVARIATE DATA)
fig=px.histogram(df, x = 'employment_type',histnorm = 'percent', text_auto = '.2f',template = 'presentation', title = 'Precentage of Employment Types')
fig.update_layout(template="plotly_dark" )
fig.show()

#DISTPLOT SHOWING COUNT OF COMPANY SIZE
sns.displot(df,x='company_size',hue='company_size',shrink=0.9)
plt.title('No.of Company size',size=25,color='olive');

# Remote_ratio
df.remote_ratio.replace([100,50,0],['Fully Remote','Partially Remote','On-site'], inplace=True)
df

#HISTOGRAM SHOWING COUNT OF EACH WORK TYPE (MULTIVARIATE ANALYSIS)
fig=px.histogram(df, x='remote_ratio',color='work_year', barmode='group',title="Count of each Work Type")
fig.update_layout(template="plotly_dark" )
fig.show();

#PIE PLOT(UNIVARIATE ANALYSIS)
# Experience Level
df.experience_level.replace(['EN','MI','SE','EX'],['Entry','Mid','Senior','Executive'],inplace=True)

level_counts=df.experience_level.value_counts()
fig=px.pie(values=level_counts.values,
          names=level_counts.index,
          color_discrete_sequence=px.colors.sequential.Mint,
          title= 'Experience level distribution',template='plotly_dark'
          )
fig.update_traces(textinfo='label+percent+value', textfont_size=13,
                  marker=dict(line=dict(color='#100000', width=0.2)))

fig.data[0].marker.line.width = 2
fig.data[0].marker.line.color='gray'
fig.show()

#MULTIVARIATE ANALYSIS
#Average Salary of Data Science jobs based on company location
avg_sal_per_comp_location=df.groupby('company_location').mean()['salary_in_usd']

plt.figure(figsize=(20,20))
sns.barplot(x=avg_sal_per_comp_location.values,y=avg_sal_per_comp_location.index)
plt.ylabel('Company location')
plt.xlabel('Average Salary(USD)')
plt.title('Average Salary of Data Science jobs based on company location', y=1.01);

#SCATTER PLOT FOR MULTIVARIATE ANALYSIS
#SCATTERPLOT ON EMPLOYEE EXPERIENCE LEVEL AND THEIR SALARY COUNT
px.scatter(df, x = 'salary_in_usd', y = 'experience_level', size = 'salary_in_usd', hover_name = 'job_title', color = 'job_title',
           color_discrete_sequence=px.colors.qualitative.Alphabet, template = 'plotly_dark',
           animation_frame = 'work_year', title = 'Experience level VS Salary').update_yaxes(categoryarray = ['Entry', 'Mid', 'Senior', 'Executive'])

#LINEPLOT(MULTIVARIATE ANALYSIS)
#Q1. How has the average salary of data science jobs change over time?
avg_sal_change=df.groupby('work_year')['salary_in_usd'].mean()
plt.figure(figsize=(12,8))
sns.lineplot(x=avg_sal_change.index,y=avg_sal_change.values,linewidth=3)

xticks=[2020,2021,2022]
plt.xticks(xticks,xticks)
plt.xlabel('Year')
plt.ylabel('Average Salary')
plt.title('Average Salary of Data Science Jobs change', size=20);



# Observations: The average salaries increased from approximately USD96000 in 2020 to USD100000
#in 2021 and finally USD125000 in 2022. This shows a
#positive trend and shows that data science jobs are becoming more valuable as the years pass.

#Q2. What are the salaries of Data Science jobs based on experience level?
avg_sal_per_exp=df.groupby('experience_level').mean()['salary_in_usd']

plt.figure(figsize=(12,8))
plt.bar(avg_sal_per_exp.index, avg_sal_per_exp.values,color='lightcoral')
xticks = ['Entry Level', 'Expert', 'Mid-Level', 'Senior Engineer']
xticks_loc = range(len(xticks))
plt.xticks(xticks_loc, xticks)
plt.ylabel('Average Salary')
plt.xlabel('Experience Level')
plt.title('Average Salary of Data Science jobs based on Experience Level', size=20, color='maroon');

#Q3.WHAT IS MOST COMMON CURRENCY IN MARKET?
sns.countplot(y=df['salary_currency'],order=df['salary_currency'].value_counts().head().index)
plt.title("What is the most common currency used in market ?",fontsize=30)

#Q4. WHICH ARE THE HIGHEST SALARY JOBS?
#BARPLOT FOR MULTIVARIATE DATA
sns.barplot(x = df.groupby("job_title")["salary"].mean().head(20).sort_values(ascending = False),
            y = df.groupby("job_title")["salary"].mean().head(20).sort_values(ascending = False).index)
plt.xlabel("Estimate Salary")
plt.ylabel("")
plt.title("Highest Salary Jobs");

#Q5. WHAT IS PERCENTAGE OF DATA SCIENCE JOBS BASED ON THEIR SALARY?
#PIE PLOT SHOWING PERCENTAGE OF DATA SCIENCE JOBS BASED ON SALARY(MULTIVARIATE ANALYSIS)
fig=px.pie(df.groupby('job_title',as_index=False)['salary'].count().sort_values(by='salary',ascending=False).head(5),names='job_title',values='salary',color='job_title',hole=0.7,labels={'job_title':'Job Position ','salary':'count'},template='ggplot2',title='<b>Data Science Jobs Based on Salary')
fig.update_layout(title_x=0.5,legend=dict(orientation='h',yanchor='bottom',y=1.02,xanchor='right',x=1))

